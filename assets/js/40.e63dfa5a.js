(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{428:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1、正则表达式介绍"}},[t._v("1、正则表达式介绍")])]),a("li",[a("a",{attrs:{href:"#_2、创建一个正则表达式"}},[t._v("2、创建一个正则表达式")])]),a("li",[a("a",{attrs:{href:"#_3、正则表达式规则"}},[t._v("3、正则表达式规则")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1-制表符"}},[t._v("3.1 制表符")])]),a("li",[a("a",{attrs:{href:"#_3-2-、-、-、-字符合集、捕获、或"}},[t._v("3.2 []、[^]、()、|字符合集、捕获、或")])]),a("li",[a("a",{attrs:{href:"#_3-3-预定义"}},[t._v("3.3 预定义")])]),a("li",[a("a",{attrs:{href:"#_3-4-边界"}},[t._v("3.4 边界")])]),a("li",[a("a",{attrs:{href:"#_3-5-量词"}},[t._v("3.5 量词")])]),a("li",[a("a",{attrs:{href:"#_3-6-断言-assertions-x-y-x-y"}},[t._v("3.6 断言(Assertions):x(?=y),x(?!y)")])]),a("li",[a("a",{attrs:{href:"#_3-7-贪婪模式和非贪婪模式"}},[t._v("3.7 贪婪模式和非贪婪模式")])])])]),a("li",[a("a",{attrs:{href:"#_4、javascript中正则表达式的相关方法"}},[t._v("4、javascript中正则表达式的相关方法")]),a("ul",[a("li",[a("a",{attrs:{href:"#_4-1、regexp对象的方法"}},[t._v("4.1、RegExp对象的方法")])]),a("li",[a("a",{attrs:{href:"#_4-2、string对象中关于正则表达式的方法"}},[t._v("4.2、String对象中关于正则表达式的方法")])])])]),a("li",[a("a",{attrs:{href:"#_5-实际例子"}},[t._v("5. 实际例子")]),a("ul",[a("li",[a("a",{attrs:{href:"#_5-1-hello-world转为helloworld"}},[t._v("5.1 hello-world转为HelloWorld")])])])]),a("li",[a("a",{attrs:{href:"#参考资料"}},[t._v("参考资料")])])])]),a("p"),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),a("h1",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("h2",{attrs:{id:"_1、正则表达式介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、正则表达式介绍"}},[t._v("#")]),t._v(" 1、正则表达式介绍")]),t._v(" "),a("p",[t._v("正则表达式（英语：Regular Expression，在代码中常简写为regex、regexp或RE）使用单个字符串来描述、匹配一系列符合某个句法规则的字符串搜索模式。")]),t._v(" "),a("p",[t._v("搜索模式可用于文本搜索和文本替换。")]),t._v(" "),a("h2",{attrs:{id:"_2、创建一个正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建一个正则表达式"}},[t._v("#")]),t._v(" 2、创建一个正则表达式")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用JavaScript内置对象RegExp创建")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配手机号(chrome 浏览器 -> Developer Tools -> Console)")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1[3-9]\\\\d{9}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/g")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/m")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ig'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/gi")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("RegExp(pattern, attributes)有两个参数:")]),t._v(" "),a("p",[t._v("第一个参数是pattern: 匹配规则，可以是字符串、正则表达式、RegExp对象，如果是字符串"),a("code",[t._v("\\")]),t._v("需要转义"),a("code",[t._v("\\\\")])]),t._v(" "),a("p",[t._v("第二个是可选参数，表示匹配模式，可选值(可组合)：")]),t._v(" "),a("blockquote",[a("p",[t._v("g：global，全局匹配，找到所有匹配，而不是在第一个匹配后停止")]),t._v(" "),a("p",[t._v("i：ingore case，忽略大小写，默认大小写敏感")]),t._v(" "),a("p",[t._v("m：multiple lines，多行搜索 , 将开始和结束字符（^和$）视为在多行上工作")]),t._v(" "),a("p",[t._v("u: Unicode; 将模式视为Unicode序列点的序列")]),t._v(" "),a("p",[t._v("y: 粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。")])])]),t._v(" "),a("li",[a("p",[t._v("表达式字面量")]),t._v(" "),a("p",[t._v("正则表达式字面量由包含在斜杠之间字符组成：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("g")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-9]\\d{9}/g")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"_3、正则表达式规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、正则表达式规则"}},[t._v("#")]),t._v(" 3、正则表达式规则")]),t._v(" "),a("p",[t._v("一个正则表达式模式是由简单的字符所构成的,一个字符（转义字符算一个）对应字符串一个字符.")]),t._v(" "),a("p",[t._v("如"),a("code",[t._v("/abc/")]),t._v('中，仅仅当\'abc\'同时出现并按照这个顺序，"Hi abc"和"My name is abc"会匹配到\'abc\',而"Grab crab"中将不会匹配。')]),t._v(" "),a("p",[t._v("当你需要搜索一个比直接匹配需要更多条件的匹配时,比如寻找一个或多个 'b'，或者寻找空格，那么这时模式将要包含特殊字符。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-制表符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-制表符"}},[t._v("#")]),t._v(" 3.1 制表符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\t")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("水平制表符(水平tab)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\r")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("回车符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\n")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换行符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\f")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换页符(\\x0c)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\v")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("垂直制表符(等于\\x0b),垂直tab")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空字符(c/c++ 语言中的字符串结束符，在ASCII字符集中对应空字符NULL，数值为0)")])])])]),t._v(" "),a("p",[t._v("使用例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\tda\\nda'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\t/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\t"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\tda↵da"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\tda\\nda'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\n/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"↵"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\tda↵da"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-2-、-、-、-字符合集、捕获、或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-、-、-、-字符合集、捕获、或"}},[t._v("#")]),t._v(" 3.2 []、"),a("code",[t._v("[^]")]),t._v("、()、|字符合集、捕获、或")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[abc]")]),t._v(" "),a("td",[t._v("一个字符集合。匹配方括号的中任意字符，包括转义字符。你可以使用破折号（-）来指定一个字符范围。对于点（.）和星号（*）这样的特殊符号在一个字符集中没有特殊的意义。他们不必进行转义，不过转义也是起作用的。 [abcd] 和[a-d]是一样的， /[a-z.]+/ 和/[\\w.]+/一样。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[^a-c]")])]),t._v(" "),a("td",[t._v("一个反向字符集。也就是说， 它匹配任何没有包含在方括号中的字符。你可以使用破折号（-）来指定一个字符范围。任何普通字符在这里都是起作用的。"),a("code",[t._v("[^abc]")]),t._v("和"),a("code",[t._v("[^a-c]")]),t._v("是一样的。")])]),t._v(" "),a("tr",[a("td",[t._v("(x)")]),t._v(" "),a("td",[t._v("匹配 'x' 并且记住匹配项, 括号被称为 "),a("em",[t._v("捕获括号")]),t._v("。捕获的内容存在RegExp.$1到RegExp.$9中(最多存9个)， 在replace方法中，则要使用"),a("code",[t._v("$1")]),t._v("、"),a("code",[t._v("$2")]),t._v("、"),a("code",[t._v("$n")]),t._v(" 这样的语法，例如，"),a("code",[t._v("'bar foo'.replace( /(...) (...)/, '$2 $1' )")])])]),t._v(" "),a("tr",[a("td",[t._v("(?:x)")]),t._v(" "),a("td",[t._v("匹配 'x' 但是不记住匹配项。叫作非捕获括号.可用来定义为与正则表达式运算符一起使用的子表达式。如 /(?:foo){1,2}/则{1,2}会匹配整个 ‘foo’ 单词。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("(\\n)")])]),t._v(" "),a("td",[t._v("n指数字，表示重复第n个分组匹配到的数据,比如："),a("code",[t._v("'123dsadas123'.match(/(\\d{3}).*(\\1)/)")]),t._v("，第一个括号分支匹配的内容是"),a("code",[t._v("123")]),t._v(",那么"),a("code",[t._v("(\\1)")]),t._v("匹配的内容必须也是"),a("code",[t._v("123")]),t._v(", 这个字符串就不匹配"),a("code",[t._v("123dsadas456")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("x|y")])]),t._v(" "),a("td",[t._v("匹配‘x’或者‘y’")])])])]),t._v(" "),a("p",[t._v("使用例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// chrome 浏览器 -> Developer Tools -> Console")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@#$a2*()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[a-z][0-9]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a2", index: 3, input: "@#$a2*()"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@#$a2*()'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[^a-z][^0-9]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["@#", index: 0, input: "@#$a2*()"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/green|red/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["green", index: 0, input: "green apple"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi, hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(hello).*(world)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello world", "hello", "world", index: 4, input: "Hi, hello world"]')]),t._v("\nRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//\t"hello"')]),t._v("\nRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//\t"world"')]),t._v("\nRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//\t""')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi, hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?:hello).*(world)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello world", "world", index: 4, input: "Hi, hello world"]')]),t._v("\nRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "world"')]),t._v("\nRegExp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"_3-3-预定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-预定义"}},[t._v("#")]),t._v(" 3.3 预定义")]),t._v(" "),a("p",[t._v("预定义： 一个特殊字符代表了一类字符的合集。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")]),t._v(" "),a("th",[t._v("相当于")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(小数点)匹配除换行符之外的任何单个字符")]),t._v(" "),a("td",[a("code",[t._v("[^\\r\\n]")])])]),t._v(" "),a("tr",[a("td",[t._v("\\d")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数字字符")]),t._v(" "),a("td",[a("code",[t._v("[0-9]")])])]),t._v(" "),a("tr",[a("td",[t._v("\\D")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非数字字符")]),t._v(" "),a("td",[a("code",[t._v("[^0-9]")])])]),t._v(" "),a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("空白符( 空格、制表符、换页符和换行符)")]),t._v(" "),a("td",[a("code",[t._v("\\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff")])])]),t._v(" "),a("tr",[a("td",[t._v("\\S")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配一个非空白字符。")]),t._v(" "),a("td",[a("code",[t._v("[^\\s]")])])]),t._v(" "),a("tr",[a("td",[t._v("\\w")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配一个单字字符（字母、数字或者下划线）")]),t._v(" "),a("td",[a("code",[t._v("[A-Za-z0-9_]")])])]),t._v(" "),a("tr",[a("td",[t._v("\\W")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配一个非单字字符")]),t._v(" "),a("td",[a("code",[t._v("[^A-Za-z0-9_]")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-4-边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-边界"}},[t._v("#")]),t._v(" 3.4 边界")]),t._v(" "),a("p",[t._v("规定一个特殊字符表示匹配的边界。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("匹配输入的开始, 多行标志被设置为true，那么也匹配换行符后紧跟的位置。 /^A/ 不会匹配 \"an A\" 中的 'A', 会匹配 \"An E\" 中的 'A'。注：^在[]中含义就变了，"),a("code",[t._v("[^]")]),t._v("表示取反。")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("匹配输入的结束。如果多行标示被设置为true，那么也匹配换行符前的位置。 /t$/ 并不会匹配 \"eater\" 中的 't'，但是会匹配 \"eat\" 中的 't'。")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("词的边界。 /\\bm/匹配“moon”中得‘m’， /oon\\b/匹配\"moon\"中得'oon'。")])]),t._v(" "),a("tr",[a("td",[t._v("\\B")]),t._v(" "),a("td",[t._v("匹配一个非单词边界。他匹配一个前后字符都是相同类型的位置：都是单词或者都不是单词。一个字符串的开始和结尾都被认为是非单词。")])])])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello1 whello9orld 12-hello8-3456 hello0'")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^hello\\d/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello1"]')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/hello\\d$/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello0"]')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\bhello\\d\\b/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello1", "hello8", "hello0"] // -也用于区分单词边界')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\Bhello\\d\\B/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello9"]')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\Bhello\\d/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello9"]')]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/hello\\d\\B/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello9"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"_3-5-量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-量词"}},[t._v("#")]),t._v(" 3.5 量词")]),t._v(" "),a("p",[t._v("下面介绍的字符可以表示一个字符出现多次的定义。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("?")]),t._v(" "),a("td",[t._v("匹配前面一个表达式0次或者1次。等价于 {0,1}。 （最多出现一次）")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("匹配前面一个表达式1次或者多次。等价于 {1,}。 （至少出现一次）")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("匹配前一个表达式0次或多次。等价于 {0,}。 （任意次）")])]),t._v(" "),a("tr",[a("td",[t._v("{n}")]),t._v(" "),a("td",[t._v("n是一个正整数，匹配了前面一个字符刚好发生了n次。")])]),t._v(" "),a("tr",[a("td",[t._v("{n,m}")]),t._v(" "),a("td",[t._v("n和m都是整数。匹配前面的字符至少n次,最多m次。如果n或者m的值是0,这个值被忽略。")])]),t._v(" "),a("tr",[a("td",[t._v("{n,}")]),t._v(" "),a("td",[t._v("前面一个字符至少出现n次")])])])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配手机号 (chrome 浏览器 -> Developer Tools -> Console)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dsa+8613244043289sss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\+86)?1[2-8]\\d{9}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["+8613244043289", "+86", index: 3, input: "dsa+8613244043289sss"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dsa13244043289sss'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?:\\+86)?1[2-8]\\d{9}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["13244043289", index: 3, input: "dsa13244043289sss"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello worldworld'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?:world){1,2}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["worldworld", index: 6, input: "hello worldworld"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello worldworld'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?:world){1}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["world", index: 6, input: "hello worldworld"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"_3-6-断言-assertions-x-y-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-断言-assertions-x-y-x-y"}},[t._v("#")]),t._v(" 3.6 断言(Assertions):"),a("code",[t._v("x(?=y)")]),t._v(","),a("code",[t._v("x(?!y)")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x(?=y)")]),t._v(" "),a("td",[t._v("仅匹配被y跟随的x。")])]),t._v(" "),a("tr",[a("td",[t._v("x(?!y)")]),t._v(" "),a("td",[t._v("仅匹配不被y跟随的x")])])])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi, hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/hello(?= world)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello", index: 4, input: "Hi, hello world"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi, hello Jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/hello(?= world)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null   ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.141'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?!\\.)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["141", index: 2, input: "3.141"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_3-7-贪婪模式和非贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-贪婪模式和非贪婪模式"}},[t._v("#")]),t._v(" 3.7 贪婪模式和非贪婪模式")]),t._v(" "),a("h4",{attrs:{id:"_3-7-1-贪婪模式-默认"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-贪婪模式-默认"}},[t._v("#")]),t._v(" 3.7.1 贪婪模式(默认)")]),t._v(" "),a("p",[t._v("正则表达式规则中，量词的匹配的规则是尽可能多的匹配，也就是贪婪模式。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a+8613244043289s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4,8}/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["86132440", "43289"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3-7-2-非贪婪模式-需设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-非贪婪模式-需设置"}},[t._v("#")]),t._v(" 3.7.2 非贪婪模式(需设置)")]),t._v(" "),a("p",[t._v("也可以设置量词(量词后加上"),a("code",[t._v("?")]),t._v("即可)让正则表达式尽可能少的匹配，称非贪婪模式。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a+8613244043289s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4,8}?/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["8613", "2440", "4328"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"_4、javascript中正则表达式的相关方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、javascript中正则表达式的相关方法"}},[t._v("#")]),t._v(" 4、javascript中正则表达式的相关方法")]),t._v(" "),a("p",[t._v("正则表达式对象本身存在一些属性，可供使用：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/g")]),t._v("\nreg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nreg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ignoreCase\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nreg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nreg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nreg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "\\d{3}"')]),t._v("\nreg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^.{3}/im")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /^.{3}/im")]),t._v("\nreg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("这些属性说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("lastIndex")]),t._v(" "),a("td",[t._v("下次匹配开始的字符串索引位置")])]),t._v(" "),a("tr",[a("td",[t._v("ignoreCase")]),t._v(" "),a("td",[t._v("是否使用了'i'标记使正则匹配忽略大小写")])]),t._v(" "),a("tr",[a("td",[t._v("global")]),t._v(" "),a("td",[t._v("是否使用了'g'标记来进行全局的匹配")])]),t._v(" "),a("tr",[a("td",[t._v("multiline")]),t._v(" "),a("td",[t._v("是否使用了'"),a("code",[t._v("m'")]),t._v("标记使正则工作在多行模式（也就是，^ 和 $ 可以匹配字符串中每一行的开始和结束（行是由 \\n 或 \\r 分割的），而不只是整个输入字符串的最开始和最末尾处。")])]),t._v(" "),a("tr",[a("td",[t._v("source")]),t._v(" "),a("td",[t._v("正则表达式")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-1、regexp对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、regexp对象的方法"}},[t._v("#")]),t._v(" 4.1、RegExp对象的方法")]),t._v(" "),a("h4",{attrs:{id:"_4-1-1、regexp-prototype-test-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1、regexp-prototype-test-str"}},[t._v("#")]),t._v(" 4.1.1、RegExp.prototype.test(str)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍： 用于测试字符串中是否存在匹配的内容")]),t._v(" "),a("p",[t._v("参数(str)：用来与正则表达式匹配的字符串")]),t._v(" "),a("p",[t._v("返回值：如果存在匹配的内容则返回true，否则返回false")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/1[3-8]\\d{9}/g")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a+8613244043289s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xiaoxiao@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"_4-1-2、regexp-prototype-exec-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2、regexp-prototype-exec-str"}},[t._v("#")]),t._v(" 4.1.2、RegExp.prototype.exec(str)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍：在一个指定字符串中执行一个搜索匹配，如果设置了全局匹配('g')，exec可多次执行，每次执行返回一个匹配结果，直到返回null为止。如果不设置全局匹配('g')，那么每次执行结果都一样。")]),t._v(" "),a("p",[t._v("参数(str)：用来与正则表达式匹配的字符串")]),t._v(" "),a("p",[t._v("返回值：如果匹配成功返回一个结果数组，并更新正则表达式对象的属性。如果匹配失败返回null")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+861330427'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["861", index: 1, input: "+861330427"]')]),t._v("\nres "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<%(.+?)%>/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<%href%>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["<%href%>", "href", index: 0, input: "<%href%>"]')]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "href"')]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "<%href%>"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("exec方法返回值(数组)结果说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[0]")]),t._v(" "),a("td",[t._v("匹配的结果")])]),t._v(" "),a("tr",[a("td",[t._v("[1], ……[n]")]),t._v(" "),a("td",[t._v("括号中的分组捕获")])]),t._v(" "),a("tr",[a("td",[t._v("index")]),t._v(" "),a("td",[t._v("匹配到的字符位于原始字符串的基于0的索引值")])]),t._v(" "),a("tr",[a("td",[t._v("input")]),t._v(" "),a("td",[t._v("原始字符串")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("全局匹配('g')的exec执行")]),t._v(" "),a("p",[t._v('当正则表达式使用 "'),a("code",[t._v("g")]),t._v('" 标志时，那么每次执行 '),a("code",[t._v("exec")]),t._v("方法都会修改正则表达式对象的lastIndex 属性值，并且查找将从正则表达式的lastIndex属性指定的位置开始匹配，直到查询结果为null(此时会设置lastIndex的值为0)。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/g")]),t._v("\nreg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/g")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/g")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["133", index: 0, input: "13304273390"]')]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["042", index: 3, input: "13304273390"]')]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["733", index: 6, input: "13304273390"]')]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("没有全局匹配的exec执行")]),t._v(" "),a("p",[t._v('当正则表达式没有使用 "'),a("code",[t._v("g")]),t._v('" 标志时，那么多次执行 '),a("code",[t._v("exec")]),t._v(" 方法返回的结果是一样的，")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["133", index: 0, input: "13304273390"]')]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再执行一次")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13304273390'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["133", index: 0, input: "13304273390"]')]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-2、string对象中关于正则表达式的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、string对象中关于正则表达式的方法"}},[t._v("#")]),t._v(" 4.2、String对象中关于正则表达式的方法")]),t._v(" "),a("h4",{attrs:{id:"_4-2-1、string-prototype-search-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1、string-prototype-search-regexp"}},[t._v("#")]),t._v(" 4.2.1、String.prototype.search(regexp)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍：检索与正则表达式相匹配的子字符串")]),t._v(" "),a("p",[t._v("参数(regexp)：一个正则表达式对象，如果传入的不是正则表达式对象，则会用new RegExp(regexp)隐式地转为正则表达式")]),t._v(" "),a("p",[t._v("返回值：如果匹配成功返回符合规则子字符串的"),a("strong",[t._v("索引")]),t._v("。否则返回-1.")])]),t._v(" "),a("p",[t._v("search()方法不会执行全局匹配(忽略标志'g'),不管执行多少次，结果都一样，因为search()方法总是从字符串开始位置进行检索。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/")]),t._v("\nreg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/g")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /\\d{3}/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我还有100元'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我还有100元'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再执行一次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我还有100元'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我还有100元'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"_4-2-2、string-prototype-match-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2、string-prototype-match-regexp"}},[t._v("#")]),t._v(" 4.2.2、String.prototype.match(regexp)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍：检索字符串，找到一个或多个与regexp匹配的文本")]),t._v(" "),a("p",[t._v('参数(regexp)： 与String.prototype.search(regexp)的参数一样，此外，如果你未提供任何参数，会得到[""]')]),t._v(" "),a("p",[t._v("返回值：")]),t._v(" "),a("ol",[a("li",[t._v("正则表达式包含 "),a("code",[t._v("g")]),t._v(" 标志(全局匹配)：返回数组，包含所有匹配的子字符串而不是匹配对象，捕获组不会被返回(括号捕获)\n"),a("ol",[a("li",[t._v("正则表达式不包含 "),a("code",[t._v("g")]),t._v(" 标志：返回和"),a("code",[t._v("RegExp.exec()")]),t._v("相同的结果\n"),a("ol",[a("li",[t._v("如果没有匹配到：返回null")])])])])])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ss13304271122dd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["133", index: 2, input: "ss13304271122dd"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ss13304271122dd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["133", "042", "711"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ss13304271122dd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}(0427)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1330427", "0427", index: 2, input: "ss13304271122dd"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ss13304271122dd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3}(0427)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["1330427"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"_4-2-3、string-prototype-replace-regexp-substr-newsubstr-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3、string-prototype-replace-regexp-substr-newsubstr-function"}},[t._v("#")]),t._v(" 4.2.3、String.prototype.replace(regexp|substr, newSubStr|function)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍：用于在字符串中把特定的值替换成新值，特定的值可以使用字符串或正则表达式去找，新值可以是一个字符串或者函数(返回一个字符串)。注意：原字符串不会改变。")]),t._v(" "),a("p",[t._v("参数：")]),t._v(" "),a("ol",[a("li",[t._v("regexp(第一个参数)：正则表达式，该正则所匹配的内容会被第二个参数的返回值替换掉")]),t._v(" "),a("li",[t._v("substr(第一个参数)：字符串，该字符串会被第二个参数的返回值替换掉")]),t._v(" "),a("li",[t._v("newSubStr(第二个参数)：字符串，用于替换第一个参数的新值")]),t._v(" "),a("li",[t._v("function(第二个参数)：一个用来创建新子字符串的函数，该函数的返回值将替换掉第一个参数匹配到的结果")])]),t._v(" "),a("p",[t._v("返回值：一个新的字符串")])]),t._v(" "),a("p",[t._v("在replace方法中，第一个参数是字符串是经常用的方式，但这种方式只能替换一次：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xx@163.com,yy@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'163'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'outlook'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"xx@outlook.com,yy@163.com"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("如果想实现更复杂的替换(多个值替换等)，可使用正则表达式作为第一个参数：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xx@163.com,yy@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/163/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'outlook'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "xx@outlook.com,yy@outlook.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xx@163.com,yy@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/163/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gmail'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "xx@gmail.com,yy@163.com"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("如果第一个参数是正则表达式，那么第二参数中还可以使用正则表达式中捕获的变量，使用"),a("code",[t._v("$1 ... $9")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xx@gmail.com,yy@163.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(gmail)(.*)(163)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$3$2$1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "xx@163.com,yy@gmail.com"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"_4-2-4、string-prototype-split-separator-limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4、string-prototype-split-separator-limit"}},[t._v("#")]),t._v(" 4.2.4、String.prototype.split(separator, limit)")]),t._v(" "),a("blockquote",[a("p",[t._v("方法介绍：用于把一个字符串分割成字符串数组。")]),t._v(" "),a("p",[t._v("参数：")]),t._v(" "),a("ol",[a("li",[t._v('separator(必需)：字符串或正则表达式，从该参数指定的地方分割字符串,如果该参数是空字符串("")，则字符串会在每个字符之间分割')]),t._v(" "),a("li",[t._v("limit(可选)：指定返回的数组的最大长度。返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割")])]),t._v(" "),a("p",[t._v("返回值：一个字符串数组。该数组是通过在 "),a("em",[t._v("separator")]),t._v(" 指定的边界处将字符串分割成子串创建的。返回的数组中的字串不包括 "),a("em",[t._v("separator")]),t._v(" 自身")])]),t._v(" "),a("p",[t._v("如果只是简单分割，则可以使用字符串：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'163,gmail,hotmail,outlook'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["163", "gmail", "hotmail", "outlook"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'163,gmail,hotmail,outlook'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["163", "gmail", "hotmail"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdef'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["a", "b", "c", "d", "e", "f"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("如果是复杂的分割，则可以使用正则表达式：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d*[\\u4e00-\\u9fa5]\\/[\\u4e00-\\u9fa5]\\,/")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配（10元/斤,）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"鸡肉10元/斤,鱼肉20元/斤,牛肉30元/斤,"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["鸡肉", "鱼肉", "牛肉", ""]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"_5-实际例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-实际例子"}},[t._v("#")]),t._v(" 5. 实际例子")]),t._v(" "),a("h3",{attrs:{id:"_5-1-hello-world转为helloworld"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-hello-world转为helloworld"}},[t._v("#")]),t._v(" 5.1 hello-world转为HelloWorld")]),t._v(" "),a("p",[t._v("将"),a("code",[t._v("hello-world-jack")]),t._v(" 转为"),a("code",[t._v("HelloWorldJack")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello-world-jack'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("camelize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(^\\w)|-(\\w)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("饥人谷课件")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://book.jirengu.com/fe/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/Javascript/%E6%AD%A3%E5%88%99%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则基本语法"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://book.jirengu.com/fe/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/Javascript/%E6%AD%A3%E5%88%99%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则相关方法"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("mdn资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions#special-negated-character-set",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp#assertions",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp对象介绍"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[t._v("String对象介绍"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/ziishaned/learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习正则表达式 github"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://wangdoc.com/javascript/stdlib/regexp.html#stringprototypereplace",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp 对象 阮一峰 ES5"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);